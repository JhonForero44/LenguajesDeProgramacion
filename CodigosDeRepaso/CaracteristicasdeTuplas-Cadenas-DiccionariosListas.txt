		CLASE 24 MAYO DE 2021
**Listas: [] o list()	Datos heterogeneos, acepta datos repetidos y mutables, tiene accesibilidad por un indice.
	*Inicialisar dato [elemento1,elemento2,elemento3]
	*Crear: [] o list()
	*inicializar con datos:
		[elemento1, elemento2, elemento3]
	*insertar elemento:
		lista.append(elemento)
		lista.insert(posicion,elemento)
	*acceder elementos:
		lista[indice]
		lista[inicio:fin:paso]
	*ilterar usando el indice:
		for i in range(len(lista)):
	*iterar con for para iterables:
		for elemento in lista
	*pertenencia:
		elemento in lista
	*eliminar elemento:
		del lista[indice]
		lista.remove(elemento)
	*Cantidad de elementos.
		len(lista)
	*Vacia
		lista.clear()	

**tuplas: () o tuple()	Datos heterogeneos, acepta datos repetidos y inmutables, tiene accesibilidad por un indice.
	*Inicialisar dato elemento1,elemento2,elemento3
	*Crear:
		() o tuple()
	*Inicializar con datos:
		elemento1, elemento2, elemento3
	*insertar elemento:
		Solo es posible inicializarla en la creacion.
	*acceder elementos
		tupla[indice]	
		tupla[inicio:fin:paso]	
	*ilterar usando el indice:
		for i in range (len(tupla)):
			print(tupla[i])
	*iterar con for para iterables:
		for elemento in tupla
	*pertenencia:
		elementento in tupla
	*eliminar elemento
		no es posible porque son inmutables
	*cantidad de elementos:
		len(lista)
	*vaciar:
		lista.clear()
	
**Conjunto: set()		Datos heterogeneos, elementos de tipos inmutables, no accesibles.
	*Inicialisar dato {elemento1,elemento2,elemento3}
	*Crear:
		set()
	*Inicializar con datos:
		{elemento1, elemento2, elemento3}
	*insertar elemento.
		conjunto.add(elemento)
	*Acceder a un elemento:
		No es posible modificar elementos.
	*Ilterar usando el indice:
		No tiene indice
	*Iterar con for para iterables:
		for elemento in conjunto
	*Pertenencia:
		elemento in conjunot
	*Eliminar Elemento:
		conjunto.remove(elemento)
		conjunto.discard(elemento)
	*Cantidad de elementos:
		len(conjunto)
	*Vaciar:	
		conjunto.clear()	

**Diccionario: dic() o {}	Claves de tipos inmutables, unicas, no admite repeticion.
	Inicialisar dato {clave:valor1,clave2:valor2}
	*Crear:
		
	*Inicializar con datos:
		{clave1 : valor1, clave2 : valor2, clave3 : valor3}
		dict([(c1,v1) , (c2,v2)]) 
	*Insertar elementos:
		dicc[clave]=valor
		dicc.update({c3:v3,c4:v4})
	*Acceder a un elemento:
		dicc[clave]
		dicc.get(clave, val_defecto)
		Iterando por sus elementos.
	*Iterar usando el indice:
		no tiene indice (el "indice" son las claves.)
	*Iterar con for para iterables:
		for clave in dicc.keys()
		for valor in dicc.values()
		for c,v in dicc.items()
	*Pertenencia:
		clave in dicc.keys()
		value in dicc.values()
	*Eliminar elemento:
		del dicc[clave]
	*Cantidad de elementos:
		len(dicc)
	*Vaciar:
		dicc.clear()		